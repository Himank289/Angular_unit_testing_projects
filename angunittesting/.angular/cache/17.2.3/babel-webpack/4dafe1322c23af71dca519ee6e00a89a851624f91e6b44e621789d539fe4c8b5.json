{"ast":null,"code":"import _asyncToGenerator from \"F:/angular_examples/angunittesting/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HEROES } from './test-heroes';\nlet HeroService = class HeroService {\n  getHeroes() {\n    return Promise.resolve(HEROES);\n  }\n  getHero(id) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (typeof id === 'string') {\n        id = parseInt(id, 10);\n      }\n      const heroes = yield _this.getHeroes();\n      return heroes.find(hero => hero.id === id);\n    })();\n  }\n  updateHero(hero) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const h = yield _this2.getHero(hero.id);\n      if (!h) {\n        throw new Error(`Hero ${hero.id} not found`);\n      }\n      return Object.assign(h, hero);\n    })();\n  }\n};\nHeroService = __decorate([Injectable({\n  providedIn: 'root'\n})\n/** Dummy HeroService. Pretend it makes real http requests */], HeroService);\nexport { HeroService };","map":{"version":3,"names":["Injectable","HEROES","HeroService","getHeroes","Promise","resolve","getHero","id","_this","_asyncToGenerator","parseInt","heroes","find","hero","updateHero","_this2","h","Error","Object","assign","__decorate","providedIn"],"sources":["F:\\angular_examples\\angunittesting\\src\\app\\model\\hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Hero }       from './hero';\nimport { HEROES }     from './test-heroes';\n\n@Injectable({providedIn:'root'})\n/** Dummy HeroService. Pretend it makes real http requests */\nexport class HeroService {\n  getHeroes():Promise<Hero[]> {\n    return Promise.resolve(HEROES);\n  }\n\n  async getHero(id: number | string): Promise<Hero|undefined> {\n    if (typeof id === 'string') {\n      id = parseInt(id as string, 10);\n    }\n    const heroes = await this.getHeroes();\n      return heroes.find((hero: { id: string | number; }) => hero.id === id);\n  }\n\n  async updateHero(hero: Hero): Promise<Hero> {\n    const h = await this.getHero(hero.id);\n      if (!h) {\n          throw new Error(`Hero ${hero.id} not found`);\n      }\n      return Object.assign(h, hero);\n  }\n}"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,eAAe;AAG1C,SAASC,MAAM,QAAY,eAAe;AAInC,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EACtBC,SAASA,CAAA;IACP,OAAOC,OAAO,CAACC,OAAO,CAACJ,MAAM,CAAC;EAChC;EAEMK,OAAOA,CAACC,EAAmB;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC/B,IAAI,OAAOF,EAAE,KAAK,QAAQ,EAAE;QAC1BA,EAAE,GAAGG,QAAQ,CAACH,EAAY,EAAE,EAAE,CAAC;;MAEjC,MAAMI,MAAM,SAASH,KAAI,CAACL,SAAS,EAAE;MACnC,OAAOQ,MAAM,CAACC,IAAI,CAAEC,IAA8B,IAAKA,IAAI,CAACN,EAAE,KAAKA,EAAE,CAAC;IAAC;EAC3E;EAEMO,UAAUA,CAACD,IAAU;IAAA,IAAAE,MAAA;IAAA,OAAAN,iBAAA;MACzB,MAAMO,CAAC,SAASD,MAAI,CAACT,OAAO,CAACO,IAAI,CAACN,EAAE,CAAC;MACnC,IAAI,CAACS,CAAC,EAAE;QACJ,MAAM,IAAIC,KAAK,CAAC,QAAQJ,IAAI,CAACN,EAAE,YAAY,CAAC;;MAEhD,OAAOW,MAAM,CAACC,MAAM,CAACH,CAAC,EAAEH,IAAI,CAAC;IAAC;EAClC;CACD;AApBYX,WAAW,GAAAkB,UAAA,EAFvBpB,UAAU,CAAC;EAACqB,UAAU,EAAC;AAAM,CAAC;AAC/B,8D,EACanB,WAAW,CAoBvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}